apiVersion: v1
kind: Template
metadata:
  name: collab-by-code-api
  annotations:
    description: "RHCollab By Code Event API"
    iconClass: "icon-nodejs"
    tags: "nodejs"
parameters:
  - name: GITHUB_WEBHOOK_SECRET
    displayName: "GitHub Webhook Secret"
    description: "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted."
    generate: "expression"
    from: "[a-zA-Z0-9]{40}"
  - name: GENERIC_WEBHOOK_SECRET
    displayName: "Generic Webhook Secret"
    description: "A secret string used to configure the Generic webhook."
    generate: "expression"
    from: "[a-zA-Z0-9]{40}"
  - description: Git branch/tag reference
    name: SOURCE_REPOSITORY_REF
    value: master
  - description: Git source URL for application
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/kameshsampath/collab-by-code-api.git
  - name: KEYCLOAK_URL
    description: The Keycloak server URL
    displayName: Keycloak Server URL
    value: http://my-keycloak.example.com/auth
    required: true
  - name: KEYCLOAK_REALM
    description: The Keycloak Realm to use
    displayName: Keycloak Realm
    value: collabbycode
    required: false
  - name: KEYCLOAK_CLIENT_ID
    description: The Keycloak Client Id
    displayName: Keycloak Client Id
    value: collab-by-code-api
    required: false
objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: collab-by-code-api
    data:
      db.path: "/opt/app-root/data"
      db.name: "eventdb.json"
      uploads.path: "/opt/app-root/data/uploads"
      keycloak.url: ${KEYCLOAK_URL}
      keycloak.realm: ${KEYCLOAK_REALM}
      keycloak.clientId: ${KEYCLOAK_CLIENT_ID}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: collab-by-code-api
      name: collab-by-code-api
    spec:
      ports:
        - name: web
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: collab-by-code-api
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: collab-by-code-api
    spec:
      port:
        targetPort: web
      tls:
        termination: edge
      to:
        kind: Service
        name: collab-by-code-api
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: collab-by-code-api
      annotations:
        description: "Collab by Code Event API"
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      labels:
        app: collab-by-code-api
      name: collab-by-code-api
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: collab-by-code-api:latest
      source:
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: "nodejs:8"
            namespace: openshift
        type: Source
      triggers:
        - generic:
            secret: ${GENERIC_WEBHOOK_SECRET}
          type: Generic
        - github:
            secret: ${GITHUB_WEBHOOK_SECRET}
          type: GitHub
        - type: ImageChange
        - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      labels:
        app: collab-by-code-api
      name: collab-by-code-api
    spec:
      strategy:
        type: Rolling
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - collab-by-code-api
            from:
              kind: ImageStreamTag
              name: "collab-by-code-api:latest"
          type: ImageChange
        - type: ConfigChange
      replicas: 1
      selector:
        app: collab-by-code-api
      template:
        metadata:
          name: collab-by-code-api
          labels:
            app: collab-by-code-api
        spec:
          containers:
            - env:
                - name: DB_PATH
                  valueFrom:
                    configMapKeyRef:
                      name: collab-by-code-api
                      key: db.path
                - name: DB_NAME
                  valueFrom:
                    configMapKeyRef:
                      name: collab-by-code-api
                      key: db.name
                - name: UPLOADS_PATH
                  valueFrom:
                    configMapKeyRef:
                      name: collab-by-code-api
                      key: uploads.path
                - name: KEYCLOAK_URL
                  valueFrom:
                    configMapKeyRef:
                      name: collab-by-code-api
                      key: keycloak.url
                - name: KEYCLOAK_REALM
                  valueFrom:
                    configMapKeyRef:
                      name: collab-by-code-api
                      key: keycloak.realm
                - name: KEYCLOAK_CLIENT_ID
                  valueFrom:
                    configMapKeyRef:
                      name: collab-by-code-api
                      key: keycloak.clientId
              image: "collab-by-code-api:latest"
              name: collab-by-code-api
              ports:
                - containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - mountPath: ${DB_PATH}
                  name: dbpath
              resources: {}
          volumes:
            - name: dbpath
              persistentVolumeClaim:
                claimName: "collabbycode"
