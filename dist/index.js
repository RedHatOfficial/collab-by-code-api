!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0}),o(n(2)).default.config();const s=r(n(3)),i=o(n(1));i.default.Promise=global.Promise;const u=o(n(4)),p=o(n(5));t.app=u.default(),t.app.set("port",process.env.PORT||process.env.OPENSHIFT_NODEJS_PORT||8080),t.app.set("ip",process.env.IP||process.env.OPENSHIFT_NODEJS_IP||"0.0.0.0"),t.app.use(p.default.json()),t.app.set("dbHost",process.env.DB_HOST),t.app.set("dbPort",process.env.DB_PORT),t.app.set("dbURL",s.format("mongodb://%s:%s",t.app.get("dbHost"),t.app.get("dbPort"))),t.app.set("dbName",process.env.DB_NAME),t.app.set("dbUser",process.env.DB_USER),t.app.set("dbUserPassword",process.env.DB_USER_PASSWORD),t.mongooseConn=i.default.connect(t.app.get("dbURL"),{dbName:t.app.get("dbName"),auth:{user:t.app.get("dbUser"),password:t.app.get("dbUserPassword")}}),n(6),n(8),t.mongooseConn.then(e=>{console.log(`\n  Connection with DB: "${t.app.get("dbURL")}" established successfully.`),t.app.listen(t.app.get("port"),()=>{console.log("\n  App is running at http://localhost:%d in %s mode.",t.app.get("port"),t.app.get("env")),console.log("\n  Press CTRL-C to stop\n")})}).catch(e=>console.log(e))},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("util")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(7);o.app.post("/api/questions",(e,t)=>{new r.Questions(e.body).save().then(e=>{t.contentType("json").status(201).send(e)},e=>{t.status(400).send(e)})}),o.app.get("/api/questions",(e,t)=>{r.Questions.find().then(e=>{t.contentType("json").status(200).send(e)},e=>{t.status(400).send(e)})})},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=o(n(1)),s=new r.default.Schema({index:{type:String,required:!0,minlength:1,maxlength:1,trim:!0},text:{type:String,required:!0,trim:!0},imageFrame:{type:String,minlength:5,trim:!0}}),i=new r.default.Schema({question:{type:String,required:!0,minlength:10,trim:!0},options:{type:[s],required:!0}}),u=new r.default.Schema({question:{type:String,required:!0,minlength:10,trim:!0},email:{type:String,required:!0,minlength:10,maxlength:75,trim:!0}});t.Questions=r.default.model("questions",i),t.UserQAns=r.default.model("user_qans",u)},function(e,t){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,